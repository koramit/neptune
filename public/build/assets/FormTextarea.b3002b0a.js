import{o as a,c as u,r as c,a as o,b as y,t as m,F as f,d as i,h as p}from"./app.3a863128.js";const b=["for"],V=["id","name","value","checked"],F={__name:"FormRadio",props:{name:{type:String,required:!0},options:{type:Array,required:!0},modelValue:{type:[String,Number,null],required:!0}},emits:["update:modelValue"],setup(e){return(n,t)=>(a(!0),u(f,null,c(e.options,(l,r)=>(a(),u("div",{for:`${e.name}:${r}`,key:r},[o("label",null,[o("input",{type:"radio",id:`${e.name}:${r}`,name:e.name,value:l,onChange:t[0]||(t[0]=d=>n.$emit("update:modelValue",d.target.value)),checked:e.modelValue===l},null,40,V),y(m(l),1)])],8,b))),128))}},g={class:"flex justify-between"},v=["for"],x={key:1,class:"text-sm text-slate-500"},h={key:2,class:"text-sm text-slate-500"},k=["type","value","readonly"],B={__name:"FormInput",props:{name:{type:String,required:!0},label:{type:[String,null],default:null},type:{type:String,default:"text"},modelValue:{type:[String,Number,null],required:!0},readonly:{type:Boolean,default:!1},required:{type:Boolean,default:!1},autoFill:{type:Boolean,default:!1}},emits:["update:modelValue"],setup(e){return(n,t)=>(a(),u("div",null,[o("div",g,[e.label?(a(),u("label",{key:0,for:e.name,class:"block text-base font-medium"},m(e.label),9,v)):i("",!0),e.required?(a(),u("span",x,"\u0E08\u0E33\u0E40\u0E1B\u0E47\u0E19")):i("",!0),e.autoFill?(a(),u("span",h,"\u0E02\u0E49\u0E2D\u0E21\u0E39\u0E25\u0E2D\u0E31\u0E15\u0E42\u0E19\u0E21\u0E31\u0E15\u0E34")):i("",!0)]),o("input",{class:"mt-1 block w-full rounded-md border-slate-300 shadow-sm focus:border-sky-500 focus:ring-sky-500 sm:text-sm",type:e.type,value:e.modelValue,onInput:t[0]||(t[0]=l=>n.$emit("update:modelValue",l.target.value)),readonly:e.readonly||e.autoFill},null,40,k)]))}},$={key:0,class:"block"},S=["value"],N={__name:"FormTextarea",props:{label:{type:[String,null],default:null},modelValue:{type:[Array,String,null],required:!0},mode:{type:String,default:"text"}},emits:["update:modelValue"],setup(e,{emit:n}){const t=e,l=p(Array.isArray(t.modelValue)&&t.mode==="array"?t.modelValue.join(`
`):t.modelValue),r=d=>{const s=d.target.value;t.mode==="array"?n("update:modelValue",s.split(`
`)):n("update:modelValue",s),l.value=s};return(d,s)=>(a(),u("div",null,[e.label?(a(),u("label",$,m(e.label),1)):i("",!0),o("textarea",{value:l.value,onInput:r},null,40,S)]))}};export{B as _,N as a,F as b};
